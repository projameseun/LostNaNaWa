//#include <iostream>
//
//int main()
//{
//	/*
//	프로그래밍이란:프로그램을 만든 행위 , 간단히 개발이라고 부르고 있다.
//	프로그래머는 프로그램을 만든 사람. 
//	이때 사용하는 언어들을 프로그래밍 언어라고 부른다.
//	대표적인게 ==>c++,c#,Java,PHP,HTML,Python 등을 포함시킨다.
//	C에서 파생되서 나온게 C#,C++이다.
//	C++비슷한 언어가 Java이다.
//
//	프로그래밍언어도 어느부분은 외워야 된다. 처음에는 특히나 외워야되는게 많다.
//	
//	C는 절차지향식 언어이다.
//	절차지향식 언어는 모든게 순서대로 이루어진다 (위에서 아래로)
//	장점:객체지향 언어에 비해 속도가 빠르다.
//	단점:유지보수가 어렵다 , 실행순서가 정해져 있으므로 코드의 순서가 바뀌게 되면 동일 한 결과를 가져오기 어렵다.
//	디버깅도 어렵다.(버그를 찾기 어렵다는게 어렵다는거다)
//	
//	C++는 객체지향 언어이다.
//	=객체지향 언어란=
//	객체->세상 존재하는 모든 것을 의미한다 사물이나 생명체 등
//	물,컴퓨터,휴지,축구공,고양이,강아지,자동차 등 모든 사물 ,생명체들이 해당된다.
//
//	컴퓨터로 예를들면
//	PC한대를 완성시려면
//	CPU,RAM,MotherBoard,SSD,HDD,VGA(그래픽카드),POWER,CASE 등 여러가지 부품이 존재
//	부품 하나하나가 연결되어서 우리가 사용하는 컴퓨터의 기능을 작동시키고 있는것이다.
//	여기서 컴퓨터의 부품들을 객체라고 생각.
//	만약에 HDD데이터쪽에서 문제가 생겼어... HDD만 교체하면 간단히 해결할수 있음 
//	그래서 유지보수가 좋아진다. 
//
//	객체지향언어를 사용하는이유 
//	
//	캡슐화,상속,다형성 
//
//	캡슐화:외부로부터 보안을 할수있다. 
//	상속:부모에 속성이 자식에게 물려져서 , 자식이 부모의 속성을 모두 가지게 되는 관계
//	다형성:같은이름의 함수를 통해서 여러개의 객체를 다르게 구현할수 있는것을 말한다.
//	void Magic()이라는 함수가 있다 
//	Magic()이라는 함수를 통해서 여러가지 마법을 구현할수 있는것이다.
//	ICE,FIRE,THUNDER 등 
//
//	
//
//	*/
//	
//	return 0;
//}
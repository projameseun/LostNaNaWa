#include <iostream>

int main()
{
	//변수: 메모리(램)에 공간을 만들고 해당공간에 값을 저장해서 사용할수 있게 해주는기능.
	//자료형(Data Type) 
	//정수형 : int char short long...
	//실수형 : float double ...
	
	//int 4byte크기를 갖고있다.
	//변수는 고정이 아니다 
	//0 : 값이라고 부른다.
	//= 대입연산자라고 부른다.
	//Lvalue , RValue
	
	int iNumber = 0;
	//컴파일 과정에서(변수 ====> 메모리주소(ffbxxx))
	
	//기본컴퓨터 단위
	//1bit 는 0,1 두가지를 표현할수 있고
	//1Byte = 8Bit
	
	//1Kbyte =1024byte
	//1mybyte = 1024kbyte
	//1gbbyte = 1024mbyte
	//1tbbyte = 1024gbyte

	
	
	char ch = 48;  //1Byte  256가지를 표현가능
	char ch2 = '48'; //작은따옴표는 한 문자를 표현
	std::cout << ch << std::endl;
	std::cout << ch2 << std::endl;

	ch = 128;
	//ch = 256 을 넣으니까 0 이나왔다  
	//왜 0이나오는지?

	//오버플로우(OverFlow)
	//변수가 표현할수 있는 최대범위를 넘어가는 경우를 오버플로우현상이라고 한다.

	//언더플로우(UnderFlow)
	//변수가 표현할수 있는 최소의범위를 넘어가는 경우를 언더플로우라고 한다.

	//애초에 자료형을 만들때 음수를 사용할지 안할지 결정해준다.
	
	//양수 ,음수를 다사용할거라면
	char ch3 = 5;

	//양수만 사용할거면 
	unsigned char ch4 = 5;

	//부호비트
	//컴퓨터에서 마이너스를 표현할때는 
	//1Byte의 기준으로 살펴보면 8개의 모든숫자를 저장하는게 아니라
	//7개만 저장되고 비트1개는 음수 또는 양수인지 구별하게 된다.
	//여기에서 양수와 음수를 구별할수 있는 비트는 부호 비트라고 부른다.

	//MSB(Most Significant Bit) 최상위 비트 
	//LSB(Least Significant Bit) 최하위 비트  

	//LSB를 이용해서 짝수,홀수를 구별할수 있다.
	//2진수로 생각했을때 
	//==============================================================================
	//0 -----> 0000		1 -----> 0001	2 ----> 0010	3 -----> 0011
	//4 -----> 0100		5 -----> 0101	6 ----> 0110	7 -----> 0111	8 ----> 1000

	//LSB는 0,1에 따라서 짝수 홀수를 알아낼수 있다.
	//이걸 and연산의 특성을 사용하면 짝수인지 홀수 인지 바로알수있다.
	//and연산 -> 두 숫자를 더했을때 모두 1일때 1 / 하나라도 0이면 0 

	//결론 어떤수를 1과 and연산을 시켜서 결과가 0이면 짝수 1이면 홀수다.

	//	ex)
	//	0011	and 
	//	0001
	//  -----
	//  0001

	//수학에서는 정수를 음수,양수,0 으로 구분하지만 컴퓨터에서는 하나의 비트에 2가지만 표현할수 있어서 0은 양수로 취급한다.



	
	

	return 0;
}
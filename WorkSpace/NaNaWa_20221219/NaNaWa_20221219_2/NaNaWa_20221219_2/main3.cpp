//#include <iostream>
//
//int main()
//{
//	//아스키코드(ASCII) => American Standard Code for Information Interchange)
//	//컴퓨터에서는 숫자를 이용해서 인식을 하는데 
//	//컴퓨터에서는 문자를 표현하려면 숫자를 이용하는데 이게 불가능하다 그래서 나오게 된 방법이 아스키코드이다.
//	//아스키 코드는 문자표현을 위해서 나오게 되었다.
//	//초창기 아스키코드는 0~127로 이루어져 있고 char형 변수로 저장되어 있다.
//	//그당시에 보면 1Byte내에서 문자등을 다 표현할수 있다는 뜻은 아주 기발한거다...
//
//	//근데 아스키코드를 이용해서 다른언어를(영어를 뺀나머지)표현하기에는 1Byte로는 부족했다.
//
//	//그래서 8비트로 확장한 아스키코드가 나왔거 이걸 우린 ANSI코드라고 부른다.
//	//우리는 지금은 128 + 128 = 256(8bit)의 데이터를 표현할수있는 ASCII를 사용한다.
//	
//	//그러나 비유럽국가 한국,중국,일본등 문자가 많은 국가에서는 제한적이었다.
//	//그래서 용량을 크게확장한 2Byte(2의16승) 유니코드가 등장함.
//	
//	//근데 이것도 모자라서 결국지금은 4Byte 유니코드를 사용하고 있다.
//
//	//UTF-8 ,UTF-16,UTF-32
//	//UTF8-은 유니코드를 이용하는 인코딩 방식중하나
//	//인코딩 -> 사용자가 입력한 문자나 기호들을 컴퓨터가 이용할수 있는 신호로 만들어주는것.
//	//UTF-8 ->문자열 집합과 인코딩을 8비트단위로 한다.
//	//UTF-16 ->16비트(2바이트)단위로 인코딩 된다.
//	//UTF-32 ->32비트(4바이트)단위로 인코딩 된다.
//
//	//한글은 2Byte이다. 
//	//이유는 영어는 알파벳 대소문자 52개로 표현이 가능
//	//하지만 한글은 너무많은 문자가 있기때문에 1Byte에 담을수가 없어서 2Byte를 사용한다.
//
//	//자료형에서 문자 한글자는 '' 작은 따옴표를 사용한다
//	//문자열(string)자료형은 둘이상의 문자데이터로 배열로의[n]개수 기능만큼 큰따옴표를 사용한다 ""
//	//즉 , ''(작은따옴표)안에 실수나 정수가 들어가게 되면 문자로 인식한다.
//
//	//std::cout << "안녕하세요" <<std::endl; //문자열은 큰따옴표를 사용한다.
//
//	char ch2 = '8';
//	std::cout << ch2 << std::endl;
//
//
//	return 0;
//}
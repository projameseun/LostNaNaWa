#include <iostream>
#include "Calculate.h"
#include "Func.h"

	

/*
	변수의 종류 4가지 
	1.지역변수 (메모리)가 해당 코드블럭을 벗어났을때 해제 된다. //(쓰임)해당지역에서만 사용이 가능하다 
	
	2.전역변수 프로그램을 실행할때 (메모리)가 생성되고 종료될때 해제된다. //(쓰임)모든지역에서 사용이 가능
	
	3.static변수(정적변수) (메모리)는 전역변수랑 같다 / (쓰임) 지역변수랑 흡사하다 
	같은 지역에서만 사용이 가능하고 생성될때 메모리가 잡히고 프로그램이 끝날때 메모리가 해제 된다.
	외부파일에서 접근했을때 이름은 같지만 서로 다른변수이다 이말은 주소가 다르다는 것이다.

	4.외부변수(extern) 외부변수라고 부르고 전역으로 쓰이면서 다른파일에도 똑같은 공용으로 쓰는 변수이다 이말은 주소가 결국 같다는 말이다.

	
	저장되는순서 ->Code,data(GVAR,BSS),Heap,Stack

	ROM(Read-only Memory) = ReadOnly
	RAM(Random Accesss Memory) = 프로그램이 실행되는 동안 필요한 정보를 저장하는 컴퓨터 메모리 이다.
	RAM이란 저장된 데이터를 순차적인 아닌 임의의 순서로 액세스 할수 있는 데이터 저장소 이다.  //Read/Write가능
	

	★메모리영역★
	===========================================================================================

	============RAM===============================================================================
	stack영역 - 지역변수,함수의 매개변수 (컴파일때 크기가 결정됨)
	heap영역 -	사용가 직접할당 하고 해제하는공간 //malloc,new등을 사용해서 동적할당되는 변수들이 heap영역에 할당이 된다.
				만약에 메모리를 사용자가 해제를 안해주면 메모리 릭이 생긴다(런타임때 크기가 결정됨)
	
	Data영역은 크게(GVAR,BSS) 영역을 합쳐일컫는 말이다.
	Bss,GVAR 영역을 나누는 이유.
	초기화된 데이터는 초기 값을 저장해야 하므로 Gvar영역에 저장되는 ROM에 저장이 된다.
	하지만 초기화 되지 않은 데이터까지 ROM에 저장하게 되면, 크기가 큰 ROM이 필요하게 되고,
	이는 비효율적이므로 초기화 되지 않은 데이터는 RAM에 저장이 된다.

	BSS(block started by symobl)-전역으로 선언된 초기화가 되지 않는 변수들을 저장하는 공간 이고 결국 0으로 되어있다.
=================RAM====================================================================================================

===============ROM=====================================================================================

	GVAR(Data)영역 - 초기화가 완료된 전역변수들을 저장하고 프로그램이 실행될때 만들어진다. 
	그리고 프로그램이 종료시 해제 된다. //전역변수,static변수,extern변수,배열,구조체등이 저장이 된다.

	코드영역 - 텍스트영역이라고 부른다. 사용자가 작성한 코드가 저장되는 영역이다.
	명령문들이 저장되는곳, 제어문,함수,상수들이 이영역에 저장된다.
	




===============ROM=====================================================================================
*/




int data = 0;	//

void Func()
{
	int a = 0;

	 data += 1;
	 g_iNumber++;

	 g_StaticNum++;

	 static int g_Total = 0;

	 g_Total++;

	 std::cout << "g_Total :" << g_Total << std::endl;
}

void Func3()
{
	//스태틱변수
	static int g_Total = 0;

	g_Total++;

	std::cout << "g_Total :" << g_Total << std::endl;


	//지역변수
	int a = 0;

	a++;

	std::cout << a << std::endl;
}




int main()
{

	Func();

	Func2();
	
	std::cout << g_iNumber << std::endl;

	std::cout << "메인 스태틱변수 값: " << g_StaticNum << std::endl;
	
	Func3();
	Func3();
	Func3();
	Func3();
	Func3();

	
	MyFunc1();
	MyFunc2();
	MyFunc3();
	MyFunc4();
	MyFunc5();


	return 0;
}